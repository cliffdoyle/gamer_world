FROM golang:1.21-alpine AS builder

# Set working directory
WORKDIR /app

# Install dependencies
RUN apk add --no-cache git

# Copy go.mod and go.sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o user-service .

# Create a minimal image
FROM alpine:latest

# Install CA certificates and PostgreSQL client
RUN apk --no-cache add ca-certificates postgresql-client

WORKDIR /root/

# Copy the binary from the builder stage
COPY --from=builder /app/user-service .
COPY .env .

# Copy and make wait script executable in one step
COPY wait-for-postgres.sh /wait-for-postgres.sh
RUN chmod +x /wait-for-postgres.sh

# Expose the application port (already correct at 8081)
EXPOSE 8081

# Command to run the executable
CMD ["./user-service"]